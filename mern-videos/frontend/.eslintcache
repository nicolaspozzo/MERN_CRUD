[{"C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\index.tsx":"1","C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Videos\\VidoeList.tsx":"3","C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Videos\\VideoForm.tsx":"4","C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Videos\\VideoService.ts":"5","C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Videos\\VideoItem.tsx":"6","C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Navbar\\Navbar.tsx":"7"},{"size":1172,"mtime":1606685145032,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1073,"mtime":1606688200445,"results":"11","hashOfConfig":"9"},{"size":4186,"mtime":1606690745011,"results":"12","hashOfConfig":"9"},{"size":692,"mtime":1606687821994,"results":"13","hashOfConfig":"9"},{"size":1186,"mtime":1606689885174,"results":"14","hashOfConfig":"9"},{"size":1259,"mtime":1606675511314,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c39qsp",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\index.tsx",[],"C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Videos\\VidoeList.tsx",[],"C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Videos\\VideoForm.tsx",["31","32"],"import React, { ChangeEvent, FormEvent, useState, useEffect } from \"react\";\r\nimport { Video } from \"./Video\";\r\nimport * as videoService from './VideoService'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\n\r\ninterface Params {\r\n    id: string\r\n}\r\n\r\nconst VideoForm = () => {\r\n\r\n    const history = useHistory()\r\n    const params = useParams<Params>()\r\n\r\n    const initialState = { title: '', description: '', url: '' }\r\n    const [video, setvideo] = useState<Video>(initialState);\r\n\r\n    const handleInputChange = (e: InputChange) => {\r\n        setvideo({ ...video, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (!params.id) {\r\n            const res = await videoService.createVideo(video);\r\n            toast.success('New video added');\r\n            setvideo(initialState)\r\n        } else {\r\n            await videoService.updateVIdeo(params.id, video)\r\n            toast.success('Video Updated');\r\n        }\r\n\r\n\r\n        history.push('/')\r\n    }\r\n\r\n\r\n    const getVideo = async (id: string) => {\r\n        const res = await videoService.getVIdeo(id);\r\n        const { title, description, url } = res.data;\r\n        setvideo({ title, description, url })\r\n        //console.log(res);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (params.id) getVideo(params.id);;\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4 offset-md-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        {\r\n                            params.id ? (\r\n                                <h3>Uptdate Video</h3>\r\n                            ) : (\r\n                                    <h3>New Video</h3>\r\n                                )}\r\n                        {/* <h3>New Video</h3> */}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Write a title for this video\"\r\n                                    className=\"form-conntrol\"\r\n                                    onChange={handleInputChange}\r\n                                    // value={video.title}\r\n                                    autoFocus\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"url\"\r\n                                    name=\"url\"\r\n                                    placeholder=\"http://somesite.com\"\r\n                                    className=\"form-control\"\r\n                                    // value={video.url}\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea name=\"description\"\r\n                                    rows={3}\r\n                                    className=\"form-control\"\r\n                                    // value={video.description}\r\n                                    placeholder=\"Write a description\"\r\n                                    onChange={handleInputChange}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                params.id ? (\r\n\r\n                                    <button className=\"btn btn-info\">Update Video</button>\r\n                                ) : (\r\n                                        <button className=\"btn btn-primary\">Create Video</button>\r\n                                    )}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoForm;\r\n","C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Videos\\VideoService.ts",[],"C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Videos\\VideoItem.tsx",[],"C:\\Users\\Nicolas\\Desktop\\mern-videos\\frontend\\src\\components\\Navbar\\Navbar.tsx",[],{"ruleId":"33","severity":1,"message":"34","line":30,"column":19,"nodeType":"35","messageId":"36","endLine":30,"endColumn":22},{"ruleId":"37","severity":1,"message":"38","line":52,"column":8,"nodeType":"39","endLine":52,"endColumn":10,"suggestions":"40"},"@typescript-eslint/no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["41"],{"desc":"42","fix":"43"},"Update the dependencies array to be: [params.id]",{"range":"44","text":"45"},[1508,1510],"[params.id]"]